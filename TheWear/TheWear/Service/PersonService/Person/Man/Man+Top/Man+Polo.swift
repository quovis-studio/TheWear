/*
 
 Copyright Â© 2022 Max Reshetov, Valentina Selezneva.
 All rights reserved.
 
*/

import UIKit

extension Man {
    
    final class func drawPolo(_ color: UIColor, _ rain: Bool) -> UIView {
        let path = UIBezierPath()
        let path1 = UIBezierPath()
        if rain {
            path.move(to: CGPoint(x: 0, y: 72.85))
            path.addCurve(to: CGPoint(x: 19.49, y: 18.24), controlPoint1: CGPoint(x: -0.03, y: 70.07), controlPoint2: CGPoint(x: 8.3, y: 30.55))
            path.addCurve(to: CGPoint(x: 54.33, y: 1.49), controlPoint1: CGPoint(x: 30.68, y: 5.93), controlPoint2: CGPoint(x: 52.68, y: 1.48))
            path.addCurve(to: CGPoint(x: 75.43, y: 13.61), controlPoint1: CGPoint(x: 55.98, y: 1.51), controlPoint2: CGPoint(x: 57.53, y: 13.61))
            path.addCurve(to: CGPoint(x: 92.77, y: 0), controlPoint1: CGPoint(x: 93.33, y: 13.61), controlPoint2: CGPoint(x: 91.46, y: -0.02))
            path.addCurve(to: CGPoint(x: 126.21, y: 15.66), controlPoint1: CGPoint(x: 94.08, y: 0.02), controlPoint2: CGPoint(x: 119.02, y: 5.28))
            path.addCurve(to: CGPoint(x: 136.76, y: 37.59), controlPoint1: CGPoint(x: 133.4, y: 26.04), controlPoint2: CGPoint(x: 136.22, y: 35.13))
            path.addCurve(to: CGPoint(x: 131.06, y: 64.25), controlPoint1: CGPoint(x: 135.39, y: 43.66), controlPoint2: CGPoint(x: 133.4, y: 52.97))
            path.addCurve(to: CGPoint(x: 119.32, y: 79.11), controlPoint1: CGPoint(x: 121.71, y: 71.11), controlPoint2: CGPoint(x: 120.37, y: 80.21))
            path.addCurve(to: CGPoint(x: 116.7, y: 67.83), controlPoint1: CGPoint(x: 118.28, y: 78.02), controlPoint2: CGPoint(x: 116.7, y: 67.83))
            path.addCurve(to: CGPoint(x: 119.72, y: 117.71), controlPoint1: CGPoint(x: 116.7, y: 67.83), controlPoint2: CGPoint(x: 117.97, y: 77.75))
            path.addCurve(to: CGPoint(x: 123.97, y: 197.01), controlPoint1: CGPoint(x: 121.46, y: 157.67), controlPoint2: CGPoint(x: 124.88, y: 191.84))
            path.addCurve(to: CGPoint(x: 32.32, y: 199.03), controlPoint1: CGPoint(x: 123.06, y: 202.17), controlPoint2: CGPoint(x: 34, y: 200.71))
            path.addCurve(to: CGPoint(x: 33.25, y: 127.32), controlPoint1: CGPoint(x: 30.64, y: 197.35), controlPoint2: CGPoint(x: 33.25, y: 152.4))
            path.addCurve(to: CGPoint(x: 32.3, y: 73.1), controlPoint1: CGPoint(x: 33.25, y: 98.35), controlPoint2: CGPoint(x: 32.3, y: 73.1))
            path.addCurve(to: CGPoint(x: 28.72, y: 83.83), controlPoint1: CGPoint(x: 32.3, y: 73.1), controlPoint2: CGPoint(x: 29.82, y: 82.16))
            path.addCurve(to: CGPoint(x: 0, y: 72.85), controlPoint1: CGPoint(x: 27.63, y: 85.49), controlPoint2: CGPoint(x: 0.03, y: 75.64))
            path.close()

            path1.move(to: CGPoint(x: 5.71, y: 3.15))
            path1.addCurve(to: CGPoint(x: 4.79, y: 0), controlPoint1: CGPoint(x: 5.27, y: 1.37), controlPoint2: CGPoint(x: 4.79, y: 0))
            path1.addCurve(to: CGPoint(x: 1.28, y: 15.55), controlPoint1: CGPoint(x: 4.79, y: 0), controlPoint2: CGPoint(x: 2.3, y: 9.51))
            path1.addCurve(to: CGPoint(x: 0, y: 29.82), controlPoint1: CGPoint(x: 0.27, y: 21.59), controlPoint2: CGPoint(x: 0, y: 29.82))
            path1.addCurve(to: CGPoint(x: 5.71, y: 3.15), controlPoint1: CGPoint(x: 0, y: 29.82), controlPoint2: CGPoint(x: 4.96, y: 6.13))
            path1.close()
        } else {
            path.move(to: CGPoint(x: 0, y: 72.85))
            path.addCurve(to: CGPoint(x: 19.49, y: 18.24), controlPoint1: CGPoint(x: -0.03, y: 70.07), controlPoint2: CGPoint(x: 8.3, y: 30.55))
            path.addCurve(to: CGPoint(x: 54.33, y: 1.49), controlPoint1: CGPoint(x: 30.68, y: 5.93), controlPoint2: CGPoint(x: 52.68, y: 1.48))
            path.addCurve(to: CGPoint(x: 74.95, y: 13.72), controlPoint1: CGPoint(x: 55.98, y: 1.51), controlPoint2: CGPoint(x: 57.05, y: 13.72))
            path.addCurve(to: CGPoint(x: 92.77, y: 0), controlPoint1: CGPoint(x: 92.86, y: 13.72), controlPoint2: CGPoint(x: 91.46, y: -0.02))
            path.addCurve(to: CGPoint(x: 128.56, y: 16.15), controlPoint1: CGPoint(x: 94.08, y: 0.02), controlPoint2: CGPoint(x: 118.49, y: 3.28))
            path.addCurve(to: CGPoint(x: 147.84, y: 73.24), controlPoint1: CGPoint(x: 138.63, y: 29.02), controlPoint2: CGPoint(x: 147.84, y: 70.44))
            path.addCurve(to: CGPoint(x: 121.69, y: 82.51), controlPoint1: CGPoint(x: 147.84, y: 76.03), controlPoint2: CGPoint(x: 122.81, y: 85.31))
            path.addCurve(to: CGPoint(x: 116.7, y: 67.83), controlPoint1: CGPoint(x: 120.57, y: 79.71), controlPoint2: CGPoint(x: 116.7, y: 67.83))
            path.addCurve(to: CGPoint(x: 119.72, y: 117.71), controlPoint1: CGPoint(x: 116.7, y: 67.83), controlPoint2: CGPoint(x: 117.97, y: 77.75))
            path.addCurve(to: CGPoint(x: 123.97, y: 197.01), controlPoint1: CGPoint(x: 121.46, y: 157.67), controlPoint2: CGPoint(x: 124.88, y: 191.84))
            path.addCurve(to: CGPoint(x: 31.85, y: 198.99), controlPoint1: CGPoint(x: 123.06, y: 202.17), controlPoint2: CGPoint(x: 33.53, y: 200.66))
            path.addCurve(to: CGPoint(x: 33.25, y: 127.32), controlPoint1: CGPoint(x: 30.18, y: 197.31), controlPoint2: CGPoint(x: 33.25, y: 152.4))
            path.addCurve(to: CGPoint(x: 32.3, y: 73.1), controlPoint1: CGPoint(x: 33.25, y: 98.35), controlPoint2: CGPoint(x: 32.3, y: 73.1))
            path.addCurve(to: CGPoint(x: 28.72, y: 83.83), controlPoint1: CGPoint(x: 32.3, y: 73.1), controlPoint2: CGPoint(x: 29.82, y: 82.16))
            path.addCurve(to: CGPoint(x: 0, y: 72.85), controlPoint1: CGPoint(x: 27.63, y: 85.49), controlPoint2: CGPoint(x: 0.03, y: 75.64))
            path.close()
        }
        let pathLayer = createLayer(path, color, CGPoint(x: 53.66, y: 125.1))
        let path1Layer = createLayer(path1, Color.shadow.medium, CGPoint(x: 184.71, y: 159.54))
        
        let path0 = UIBezierPath()
        path0.move(to: CGPoint(x: 4.53, y: 0))
        path0.addLine(to: CGPoint.zero)
        path0.addCurve(to: CGPoint(x: 0.58, y: 16.88), controlPoint1: CGPoint.zero, controlPoint2: CGPoint(x: 0.39, y: 11.19))
        path0.addCurve(to: CGPoint(x: 0.58, y: 31.58), controlPoint1: CGPoint(x: 0.78, y: 22.57), controlPoint2: CGPoint(x: 0.58, y: 31.58))
        path0.addLine(to: CGPoint(x: 5.07, y: 31.58))
        path0.addCurve(to: CGPoint(x: 5.27, y: 16.21), controlPoint1: CGPoint(x: 5.07, y: 31.58), controlPoint2: CGPoint(x: 5.54, y: 22.82))
        path0.addCurve(to: CGPoint(x: 4.53, y: 0), controlPoint1: CGPoint(x: 5, y: 9.6), controlPoint2: CGPoint(x: 4.53, y: 0))
        path0.close()
        let path0Layer = createLayer(path0, Color.shadow.medium, CGPoint(x: 129.53, y: 138.69))
        
        let oval = UIBezierPath()
        oval.move(to: CGPoint(x: 1.48, y: 2.96))
        oval.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval.close()
        let ovalLayer = createLayer(oval, Color.shadow.bold, CGPoint(x: 130.78, y: 146.61))
        
        let oval2 = UIBezierPath()
        oval2.move(to: CGPoint(x: 1.48, y: 2.96))
        oval2.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval2.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval2.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval2.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval2.close()
        let oval2Layer = createLayer(oval2, Color.shadow.bold, CGPoint(x: 131.15, y: 155.66))
        
        let oval3 = UIBezierPath()
        oval3.move(to: CGPoint(x: 1.48, y: 2.96))
        oval3.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval3.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval3.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval3.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval3.close()
        let oval3Layer = createLayer(oval3, Color.shadow.bold, CGPoint(x: 131.06, y: 164))
        
        let path2 = UIBezierPath()
        path2.move(to: CGPoint(x: 0.18, y: 4.94))
        path2.addCurve(to: CGPoint(x: 4.52, y: 0.97), controlPoint1: CGPoint(x: 0.64, y: 3.49), controlPoint2: CGPoint(x: 1.9, y: 2.36))
        path2.addCurve(to: CGPoint(x: 11.05, y: 0.1), controlPoint1: CGPoint(x: 7.15, y: -0.43), controlPoint2: CGPoint(x: 11.05, y: 0.1))
        path2.addCurve(to: CGPoint(x: 15.48, y: 8.36), controlPoint1: CGPoint(x: 11.05, y: 0.1), controlPoint2: CGPoint(x: 11.13, y: 4.48))
        path2.addCurve(to: CGPoint(x: 25.09, y: 15.94), controlPoint1: CGPoint(x: 19.82, y: 12.24), controlPoint2: CGPoint(x: 26.54, y: 15.82))
        path2.addCurve(to: CGPoint(x: 21.5, y: 19.65), controlPoint1: CGPoint(x: 23.64, y: 16.06), controlPoint2: CGPoint(x: 22.56, y: 17.85))
        path2.addCurve(to: CGPoint(x: 18.45, y: 25.04), controlPoint1: CGPoint(x: 20.44, y: 21.45), controlPoint2: CGPoint(x: 19.5, y: 25.52))
        path2.addCurve(to: CGPoint(x: 5.95, y: 15.1), controlPoint1: CGPoint(x: 17.39, y: 24.57), controlPoint2: CGPoint(x: 12.19, y: 21.66))
        path2.addCurve(to: CGPoint(x: 0.18, y: 4.94), controlPoint1: CGPoint(x: -0.3, y: 8.53), controlPoint2: CGPoint(x: -0.28, y: 6.39))
        path2.close()
        let path2Layer = createLayer(path2, color, CGPoint(x: 106.69, y: 122.85))
        
        let path3 = UIBezierPath()
        path3.move(to: CGPoint(x: 0.18, y: 4.94))
        path3.addCurve(to: CGPoint(x: 4.52, y: 0.97), controlPoint1: CGPoint(x: 0.64, y: 3.49), controlPoint2: CGPoint(x: 1.9, y: 2.36))
        path3.addCurve(to: CGPoint(x: 11.05, y: 0.1), controlPoint1: CGPoint(x: 7.15, y: -0.43), controlPoint2: CGPoint(x: 11.05, y: 0.1))
        path3.addCurve(to: CGPoint(x: 15.48, y: 8.36), controlPoint1: CGPoint(x: 11.05, y: 0.1), controlPoint2: CGPoint(x: 11.13, y: 4.48))
        path3.addCurve(to: CGPoint(x: 25.09, y: 15.94), controlPoint1: CGPoint(x: 19.82, y: 12.24), controlPoint2: CGPoint(x: 26.54, y: 15.82))
        path3.addCurve(to: CGPoint(x: 21.5, y: 19.65), controlPoint1: CGPoint(x: 23.64, y: 16.06), controlPoint2: CGPoint(x: 22.56, y: 17.85))
        path3.addCurve(to: CGPoint(x: 18.45, y: 25.04), controlPoint1: CGPoint(x: 20.44, y: 21.45), controlPoint2: CGPoint(x: 19.5, y: 25.52))
        path3.addCurve(to: CGPoint(x: 5.95, y: 15.1), controlPoint1: CGPoint(x: 17.39, y: 24.57), controlPoint2: CGPoint(x: 12.19, y: 21.66))
        path3.addCurve(to: CGPoint(x: 0.18, y: 4.94), controlPoint1: CGPoint(x: -0.3, y: 8.53), controlPoint2: CGPoint(x: -0.28, y: 6.39))
        path3.close()
        let path3Layer = createLayer(path3, Color.shadow.bold, CGPoint(x: 106.69, y: 122.85))
        
        let path4 = UIBezierPath()
        path4.move(to: CGPoint(x: 17.02, y: 3.98))
        path4.addCurve(to: CGPoint(x: 12.76, y: 0.71), controlPoint1: CGPoint(x: 16.76, y: 3.58), controlPoint2: CGPoint(x: 15.45, y: 1.75))
        path4.addCurve(to: CGPoint(x: 6.08, y: 0.08), controlPoint1: CGPoint(x: 10.07, y: -0.32), controlPoint2: CGPoint(x: 6.08, y: 0.08))
        path4.addCurve(to: CGPoint(x: 5.06, y: 8.6), controlPoint1: CGPoint(x: 6.08, y: 0.08), controlPoint2: CGPoint(x: 6.88, y: 4.52))
        path4.addCurve(to: CGPoint(x: 0.2, y: 16.03), controlPoint1: CGPoint(x: 3.24, y: 12.68), controlPoint2: CGPoint(x: -0.96, y: 15.91))
        path4.addCurve(to: CGPoint(x: 4.31, y: 20.01), controlPoint1: CGPoint(x: 1.35, y: 16.15), controlPoint2: CGPoint(x: 3.14, y: 18.4))
        path4.addCurve(to: CGPoint(x: 7.81, y: 24.67), controlPoint1: CGPoint(x: 5.47, y: 21.63), controlPoint2: CGPoint(x: 6.97, y: 25.15))
        path4.addCurve(to: CGPoint(x: 15.63, y: 14.27), controlPoint1: CGPoint(x: 8.64, y: 24.2), controlPoint2: CGPoint(x: 11.83, y: 21.04))
        path4.addCurve(to: CGPoint(x: 17.02, y: 3.98), controlPoint1: CGPoint(x: 19.43, y: 7.5), controlPoint2: CGPoint(x: 17.29, y: 4.39))
        path4.close()
        let path4Layer = createLayer(path4, color, CGPoint(x: 131.94, y: 122.77))
        
        let path5 = UIBezierPath()
        path5.move(to: CGPoint(x: 17.02, y: 3.98))
        path5.addCurve(to: CGPoint(x: 12.76, y: 0.71), controlPoint1: CGPoint(x: 16.76, y: 3.58), controlPoint2: CGPoint(x: 15.45, y: 1.75))
        path5.addCurve(to: CGPoint(x: 6.08, y: 0.08), controlPoint1: CGPoint(x: 10.07, y: -0.32), controlPoint2: CGPoint(x: 6.08, y: 0.08))
        path5.addCurve(to: CGPoint(x: 5.06, y: 8.6), controlPoint1: CGPoint(x: 6.08, y: 0.08), controlPoint2: CGPoint(x: 6.88, y: 4.52))
        path5.addCurve(to: CGPoint(x: 0.2, y: 16.03), controlPoint1: CGPoint(x: 3.24, y: 12.68), controlPoint2: CGPoint(x: -0.96, y: 15.91))
        path5.addCurve(to: CGPoint(x: 4.31, y: 20.01), controlPoint1: CGPoint(x: 1.35, y: 16.15), controlPoint2: CGPoint(x: 3.14, y: 18.4))
        path5.addCurve(to: CGPoint(x: 7.81, y: 24.67), controlPoint1: CGPoint(x: 5.47, y: 21.63), controlPoint2: CGPoint(x: 6.97, y: 25.15))
        path5.addCurve(to: CGPoint(x: 15.63, y: 14.27), controlPoint1: CGPoint(x: 8.64, y: 24.2), controlPoint2: CGPoint(x: 11.83, y: 21.04))
        path5.addCurve(to: CGPoint(x: 17.02, y: 3.98), controlPoint1: CGPoint(x: 19.43, y: 7.5), controlPoint2: CGPoint(x: 17.29, y: 4.39))
        path5.close()
        let path5Layer = createLayer(path5, Color.shadow.bold, CGPoint(x: 131.94, y: 122.77))
        
        let polo = UIView()
        polo.layer.addSublayers(pathLayer, path1Layer, path0Layer, ovalLayer, oval2Layer, oval3Layer, path2Layer, path3Layer, path4Layer, path5Layer)
        return polo
    }
    
}
