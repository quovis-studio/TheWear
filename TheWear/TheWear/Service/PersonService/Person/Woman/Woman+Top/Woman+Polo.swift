/*
 
 Copyright Â© 2022 Max Reshetov, Valentina Selezneva.
 All rights reserved.
 
*/

import UIKit

extension Woman {
    
    final class func drawPolo(_ color: UIColor, _ rain: Bool) -> UIView {
        let path0 = UIBezierPath()
        let path00 = UIBezierPath()
        if rain {
            path0.move(to: CGPoint(x: 0, y: 59.69))
            path0.addCurve(to: CGPoint(x: 18.11, y: 15.81), controlPoint1: CGPoint(x: -0.03, y: 56.9), controlPoint2: CGPoint(x: 8.14, y: 26.77))
            path0.addCurve(to: CGPoint(x: 46.41, y: 1.07), controlPoint1: CGPoint(x: 28.07, y: 4.85), controlPoint2: CGPoint(x: 44.75, y: 1.06))
            path0.addCurve(to: CGPoint(x: 64.94, y: 12.57), controlPoint1: CGPoint(x: 48.06, y: 1.08), controlPoint2: CGPoint(x: 49.05, y: 12.57))
            path0.addCurve(to: CGPoint(x: 81.99, y: 0), controlPoint1: CGPoint(x: 80.83, y: 12.57), controlPoint2: CGPoint(x: 80.68, y: -0.02))
            path0.addCurve(to: CGPoint(x: 110.04, y: 12.57), controlPoint1: CGPoint(x: 83.3, y: 0.02), controlPoint2: CGPoint(x: 102.99, y: 2))
            path0.addCurve(to: CGPoint(x: 122.85, y: 44.46), controlPoint1: CGPoint(x: 117.08, y: 23.14), controlPoint2: CGPoint(x: 122.03, y: 40.32))
            path0.addCurve(to: CGPoint(x: 120.61, y: 53.73), controlPoint1: CGPoint(x: 122.7, y: 45.11), controlPoint2: CGPoint(x: 121.11, y: 52.11))
            path0.addCurve(to: CGPoint(x: 111.74, y: 60.88), controlPoint1: CGPoint(x: 118.07, y: 55.21), controlPoint2: CGPoint(x: 115.46, y: 56.87))
            path0.addCurve(to: CGPoint(x: 105.75, y: 60.44), controlPoint1: CGPoint(x: 108.02, y: 64.9), controlPoint2: CGPoint(x: 107.23, y: 69.6))
            path0.addCurve(to: CGPoint(x: 101.48, y: 108.32), controlPoint1: CGPoint(x: 109.17, y: 81.63), controlPoint2: CGPoint(x: 98.28, y: 77.52))
            path0.addCurve(to: CGPoint(x: 108.75, y: 171.58), controlPoint1: CGPoint(x: 104.67, y: 139.13), controlPoint2: CGPoint(x: 109.66, y: 166.42))
            path0.addCurve(to: CGPoint(x: 23.28, y: 171.58), controlPoint1: CGPoint(x: 107.83, y: 176.75), controlPoint2: CGPoint(x: 24.53, y: 175.36))
            path0.addCurve(to: CGPoint(x: 30.21, y: 100.99), controlPoint1: CGPoint(x: 22.02, y: 167.81), controlPoint2: CGPoint(x: 30.21, y: 126.07))
            path0.addCurve(to: CGPoint(x: 23.61, y: 57.47), controlPoint1: CGPoint(x: 30.21, y: 72.02), controlPoint2: CGPoint(x: 23.61, y: 57.47))
            path0.addCurve(to: CGPoint(x: 19.64, y: 68.32), controlPoint1: CGPoint(x: 23.61, y: 57.47), controlPoint2: CGPoint(x: 20.73, y: 66.65))
            path0.addCurve(to: CGPoint(x: 0, y: 59.69), controlPoint1: CGPoint(x: 18.55, y: 69.98), controlPoint2: CGPoint(x: 0.03, y: 62.47))
            path0.close()
            
            path00.move(to: CGPoint(x: 1.35, y: 13.06))
            path00.addCurve(to: CGPoint(x: 3.58, y: 3.8), controlPoint1: CGPoint(x: 1.87, y: 11.22), controlPoint2: CGPoint(x: 2.91, y: 6.84))
            path00.addCurve(to: CGPoint(x: 2.64, y: 0), controlPoint1: CGPoint(x: 3.25, y: 2.17), controlPoint2: CGPoint(x: 2.87, y: 0.84))
            path00.addCurve(to: CGPoint(x: 0, y: 13.87), controlPoint1: CGPoint(x: 1.85, y: 3.17), controlPoint2: CGPoint(x: 1.27, y: 6.34))
            path00.addCurve(to: CGPoint(x: 1.35, y: 13.06), controlPoint1: CGPoint(x: 0.39, y: 13.63), controlPoint2: CGPoint(x: 0.85, y: 13.35))
            path00.close()
        } else {
            path0.move(to: CGPoint(x: 0, y: 59.69))
            path0.addCurve(to: CGPoint(x: 18.11, y: 15.81), controlPoint1: CGPoint(x: -0.03, y: 56.9), controlPoint2: CGPoint(x: 8.14, y: 26.77))
            path0.addCurve(to: CGPoint(x: 46.41, y: 1.07), controlPoint1: CGPoint(x: 28.07, y: 4.85), controlPoint2: CGPoint(x: 44.75, y: 1.06))
            path0.addCurve(to: CGPoint(x: 65.31, y: 12.72), controlPoint1: CGPoint(x: 48.06, y: 1.09), controlPoint2: CGPoint(x: 49.41, y: 12.72))
            path0.addCurve(to: CGPoint(x: 81.99, y: 0), controlPoint1: CGPoint(x: 81.2, y: 12.72), controlPoint2: CGPoint(x: 80.68, y: -0.02))
            path0.addCurve(to: CGPoint(x: 110.04, y: 12.57), controlPoint1: CGPoint(x: 83.3, y: 0.02), controlPoint2: CGPoint(x: 101.2, y: 1.28))
            path0.addCurve(to: CGPoint(x: 128.85, y: 58.54), controlPoint1: CGPoint(x: 118.88, y: 23.87), controlPoint2: CGPoint(x: 128.85, y: 55.74))
            path0.addCurve(to: CGPoint(x: 109.73, y: 66.9), controlPoint1: CGPoint(x: 128.85, y: 61.34), controlPoint2: CGPoint(x: 110.85, y: 69.69))
            path0.addCurve(to: CGPoint(x: 106.64, y: 57.28), controlPoint1: CGPoint(x: 108.61, y: 64.1), controlPoint2: CGPoint(x: 107.72, y: 59.51))
            path0.addCurve(to: CGPoint(x: 101.48, y: 108.32), controlPoint1: CGPoint(x: 109.3, y: 82.14), controlPoint2: CGPoint(x: 98.28, y: 77.52))
            path0.addCurve(to: CGPoint(x: 108.79, y: 171.53), controlPoint1: CGPoint(x: 104.67, y: 139.13), controlPoint2: CGPoint(x: 109.7, y: 166.37))
            path0.addCurve(to: CGPoint(x: 23.32, y: 171.53), controlPoint1: CGPoint(x: 107.88, y: 176.7), controlPoint2: CGPoint(x: 24.58, y: 175.3))
            path0.addCurve(to: CGPoint(x: 30.21, y: 100.99), controlPoint1: CGPoint(x: 22.06, y: 167.76), controlPoint2: CGPoint(x: 30.21, y: 126.08))
            path0.addCurve(to: CGPoint(x: 23.61, y: 57.47), controlPoint1: CGPoint(x: 30.21, y: 72.02), controlPoint2: CGPoint(x: 23.61, y: 57.47))
            path0.addCurve(to: CGPoint(x: 19.64, y: 68.32), controlPoint1: CGPoint(x: 23.61, y: 57.47), controlPoint2: CGPoint(x: 20.73, y: 66.65))
            path0.addCurve(to: CGPoint(x: 0, y: 59.69), controlPoint1: CGPoint(x: 18.55, y: 69.98), controlPoint2: CGPoint(x: 0.03, y: 62.47))
            path0.close()
        }
        let path0Layer = createLayer(path0, color, rain ? CGPoint(x: 64.63, y: 127.7) : CGPoint(x: 64.59, y: 127.75))
        let path00Layer = createLayer(path00, Color.shadow.medium, CGPoint(x: 183.9, y: 168.36))
        
        let path = UIBezierPath()
        path.move(to: CGPoint(x: 4.53, y: 0))
        path.addLine(to: CGPoint.zero)
        path.addCurve(to: CGPoint(x: 0.58, y: 16.88), controlPoint1: CGPoint.zero, controlPoint2: CGPoint(x: 0.39, y: 11.19))
        path.addCurve(to: CGPoint(x: 0.58, y: 31.58), controlPoint1: CGPoint(x: 0.78, y: 22.57), controlPoint2: CGPoint(x: 0.58, y: 31.58))
        path.addLine(to: CGPoint(x: 5.07, y: 31.58))
        path.addCurve(to: CGPoint(x: 5.27, y: 16.21), controlPoint1: CGPoint(x: 5.07, y: 31.58), controlPoint2: CGPoint(x: 5.54, y: 22.82))
        path.addCurve(to: CGPoint(x: 4.53, y: 0), controlPoint1: CGPoint(x: 5.01, y: 9.6), controlPoint2: CGPoint(x: 4.53, y: 0))
        path.close()
        let pathLayer = createLayer(path, Color.shadow.medium, CGPoint(x: 130.18, y: 140.26))
        
        let path2 = UIBezierPath()
        path2.move(to: CGPoint(x: 0.22, y: 5.83))
        path2.addCurve(to: CGPoint(x: 4.25, y: 1.94), controlPoint1: CGPoint(x: 0.68, y: 4.38), controlPoint2: CGPoint(x: 1.62, y: 3.34))
        path2.addCurve(to: CGPoint(x: 11.58, y: 0), controlPoint1: CGPoint(x: 6.88, y: 0.55), controlPoint2: CGPoint(x: 11.58, y: 0))
        path2.addCurve(to: CGPoint(x: 15.64, y: 9.68), controlPoint1: CGPoint(x: 11.58, y: 0), controlPoint2: CGPoint(x: 11.3, y: 5.8))
        path2.addCurve(to: CGPoint(x: 24.82, y: 16.92), controlPoint1: CGPoint(x: 19.99, y: 13.56), controlPoint2: CGPoint(x: 26.27, y: 16.8))
        path2.addCurve(to: CGPoint(x: 21.23, y: 20.63), controlPoint1: CGPoint(x: 23.37, y: 17.04), controlPoint2: CGPoint(x: 22.29, y: 18.83))
        path2.addCurve(to: CGPoint(x: 18.17, y: 26.02), controlPoint1: CGPoint(x: 20.17, y: 22.43), controlPoint2: CGPoint(x: 19.23, y: 26.49))
        path2.addCurve(to: CGPoint(x: 5.67, y: 16.07), controlPoint1: CGPoint(x: 17.12, y: 25.55), controlPoint2: CGPoint(x: 11.92, y: 22.63))
        path2.addCurve(to: CGPoint(x: 0.22, y: 5.83), controlPoint1: CGPoint(x: -0.57, y: 9.51), controlPoint2: CGPoint(x: -0.24, y: 7.28))
        path2.close()
        let path2Layer = createLayer(path2, color, CGPoint(x: 107.83, y: 123.51))
        
        let path3 = UIBezierPath()
        path3.move(to: CGPoint(x: 0.22, y: 5.83))
        path3.addCurve(to: CGPoint(x: 4.25, y: 1.94), controlPoint1: CGPoint(x: 0.68, y: 4.38), controlPoint2: CGPoint(x: 1.62, y: 3.34))
        path3.addCurve(to: CGPoint(x: 11.58, y: 0), controlPoint1: CGPoint(x: 6.88, y: 0.55), controlPoint2: CGPoint(x: 11.58, y: 0))
        path3.addCurve(to: CGPoint(x: 15.64, y: 9.68), controlPoint1: CGPoint(x: 11.58, y: 0), controlPoint2: CGPoint(x: 11.3, y: 5.8))
        path3.addCurve(to: CGPoint(x: 24.82, y: 16.92), controlPoint1: CGPoint(x: 19.99, y: 13.56), controlPoint2: CGPoint(x: 26.27, y: 16.8))
        path3.addCurve(to: CGPoint(x: 21.23, y: 20.63), controlPoint1: CGPoint(x: 23.37, y: 17.04), controlPoint2: CGPoint(x: 22.29, y: 18.83))
        path3.addCurve(to: CGPoint(x: 18.17, y: 26.02), controlPoint1: CGPoint(x: 20.17, y: 22.43), controlPoint2: CGPoint(x: 19.23, y: 26.49))
        path3.addCurve(to: CGPoint(x: 5.67, y: 16.07), controlPoint1: CGPoint(x: 17.12, y: 25.55), controlPoint2: CGPoint(x: 11.92, y: 22.63))
        path3.addCurve(to: CGPoint(x: 0.22, y: 5.83), controlPoint1: CGPoint(x: -0.57, y: 9.51), controlPoint2: CGPoint(x: -0.24, y: 7.28))
        path3.close()
        let path3Layer = createLayer(path3, Color.shadow.bold, CGPoint(x: 107.83, y: 123.51))
        
        let path4 = UIBezierPath()
        path4.move(to: CGPoint(x: 17.03, y: 4.93))
        path4.addCurve(to: CGPoint(x: 12.76, y: 1.66), controlPoint1: CGPoint(x: 16.76, y: 4.52), controlPoint2: CGPoint(x: 15.45, y: 2.7))
        path4.addCurve(to: CGPoint(x: 5.96, y: 0), controlPoint1: CGPoint(x: 10.07, y: 0.62), controlPoint2: CGPoint(x: 5.96, y: 0))
        path4.addCurve(to: CGPoint(x: 5.06, y: 9.54), controlPoint1: CGPoint(x: 5.96, y: 0), controlPoint2: CGPoint(x: 6.91, y: 5.4))
        path4.addCurve(to: CGPoint(x: 0.2, y: 16.97), controlPoint1: CGPoint(x: 3.22, y: 13.69), controlPoint2: CGPoint(x: -0.95, y: 16.85))
        path4.addCurve(to: CGPoint(x: 4.31, y: 20.96), controlPoint1: CGPoint(x: 1.35, y: 17.09), controlPoint2: CGPoint(x: 3.14, y: 19.34))
        path4.addCurve(to: CGPoint(x: 7.81, y: 25.62), controlPoint1: CGPoint(x: 5.48, y: 22.57), controlPoint2: CGPoint(x: 6.97, y: 26.09))
        path4.addCurve(to: CGPoint(x: 15.63, y: 15.21), controlPoint1: CGPoint(x: 8.64, y: 25.15), controlPoint2: CGPoint(x: 11.83, y: 21.99))
        path4.addCurve(to: CGPoint(x: 17.03, y: 4.93), controlPoint1: CGPoint(x: 19.43, y: 8.44), controlPoint2: CGPoint(x: 17.29, y: 5.33))
        path4.close()
        let path4Layer = createLayer(path4, color, CGPoint(x: 132.19, y: 123.54))
        
        let path5 = UIBezierPath()
        path5.move(to: CGPoint(x: 17.03, y: 4.93))
        path5.addCurve(to: CGPoint(x: 12.76, y: 1.66), controlPoint1: CGPoint(x: 16.76, y: 4.52), controlPoint2: CGPoint(x: 15.45, y: 2.7))
        path5.addCurve(to: CGPoint(x: 5.96, y: 0), controlPoint1: CGPoint(x: 10.07, y: 0.62), controlPoint2: CGPoint(x: 5.96, y: 0))
        path5.addCurve(to: CGPoint(x: 5.06, y: 9.54), controlPoint1: CGPoint(x: 5.96, y: 0), controlPoint2: CGPoint(x: 6.91, y: 5.4))
        path5.addCurve(to: CGPoint(x: 0.2, y: 16.97), controlPoint1: CGPoint(x: 3.22, y: 13.69), controlPoint2: CGPoint(x: -0.95, y: 16.85))
        path5.addCurve(to: CGPoint(x: 4.31, y: 20.96), controlPoint1: CGPoint(x: 1.35, y: 17.09), controlPoint2: CGPoint(x: 3.14, y: 19.34))
        path5.addCurve(to: CGPoint(x: 7.81, y: 25.62), controlPoint1: CGPoint(x: 5.48, y: 22.57), controlPoint2: CGPoint(x: 6.97, y: 26.09))
        path5.addCurve(to: CGPoint(x: 15.63, y: 15.21), controlPoint1: CGPoint(x: 8.64, y: 25.15), controlPoint2: CGPoint(x: 11.83, y: 21.99))
        path5.addCurve(to: CGPoint(x: 17.03, y: 4.93), controlPoint1: CGPoint(x: 19.43, y: 8.44), controlPoint2: CGPoint(x: 17.29, y: 5.33))
        path5.close()
        let path5Layer = createLayer(path5, Color.shadow.bold, CGPoint(x: 132.19, y: 123.54))
        
        let oval = UIBezierPath()
        oval.move(to: CGPoint(x: 1.48, y: 2.96))
        oval.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval.close()
        let ovalLayer = createLayer(oval, Color.shadow.bold, CGPoint(x: 131.43, y: 148.18))
        
        let oval2 = UIBezierPath()
        oval2.move(to: CGPoint(x: 1.48, y: 2.96))
        oval2.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval2.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval2.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval2.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval2.close()
        let oval2Layer = createLayer(oval2, Color.shadow.bold, CGPoint(x: 131.8, y: 157.23))
        
        let oval3 = UIBezierPath()
        oval3.move(to: CGPoint(x: 1.48, y: 2.96))
        oval3.addCurve(to: CGPoint(x: 2.96, y: 1.48), controlPoint1: CGPoint(x: 2.3, y: 2.96), controlPoint2: CGPoint(x: 2.96, y: 2.3))
        oval3.addCurve(to: CGPoint(x: 1.48, y: 0), controlPoint1: CGPoint(x: 2.96, y: 0.66), controlPoint2: CGPoint(x: 2.3, y: 0))
        oval3.addCurve(to: CGPoint(x: 0, y: 1.48), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval3.addCurve(to: CGPoint(x: 1.48, y: 2.96), controlPoint1: CGPoint(x: 0, y: 2.3), controlPoint2: CGPoint(x: 0.66, y: 2.96))
        oval3.close()
        let oval3Layer = createLayer(oval3, Color.shadow.bold, CGPoint(x: 131.71, y: 165.56))
        
        let top = UIView()
        top.layer.addSublayers(path0Layer, path00Layer, pathLayer, path2Layer, path3Layer, path4Layer, path5Layer, ovalLayer, oval2Layer, oval3Layer)
        return top
    }
    
}
