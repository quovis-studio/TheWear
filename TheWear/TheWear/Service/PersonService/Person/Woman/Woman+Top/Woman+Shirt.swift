/*
 
 Copyright Â© 2022 Max Reshetov, Valentina Selezneva.
 All rights reserved.
 
*/

import UIKit

extension Woman {
    
    final class func drawShirt(_ color: UIColor, _ rain: Bool) -> UIView {
        let path = UIBezierPath()
        path.move(to: CGPoint(x: 2.47, y: 6.32))
        path.addLine(to: CGPoint(x: 2.97, y: 0))
        path.addLine(to: CGPoint(x: 1.95, y: 0.67))
        path.addLine(to: CGPoint(x: 0, y: 6.75))
        path.addLine(to: CGPoint(x: 2.47, y: 6.32))
        path.close()
        let pathLayer = createLayer(path, color, CGPoint(x: 116.56, y: 121.93))
        
        let path2 = UIBezierPath()
        path2.move(to: CGPoint(x: 2.47, y: 6.32))
        path2.addLine(to: CGPoint(x: 2.97, y: 0))
        path2.addLine(to: CGPoint(x: 1.95, y: 0.67))
        path2.addLine(to: CGPoint(x: 0, y: 6.75))
        path2.addLine(to: CGPoint(x: 2.47, y: 6.32))
        path2.close()
        let path2Layer = createLayer(path2, Color.shadow.medium, CGPoint(x: 116.56, y: 121.93))
        
        let path3 = UIBezierPath()
        path3.move(to: CGPoint(x: 2.47, y: 6.32))
        path3.addLine(to: CGPoint(x: 2.97, y: 0))
        path3.addLine(to: CGPoint(x: 1.95, y: 0.67))
        path3.addLine(to: CGPoint(x: 0, y: 6.75))
        path3.addLine(to: CGPoint(x: 2.47, y: 6.32))
        path3.close()
        let path3Layer = createLayer(path3, Color.shadow.bold, CGPoint(x: 116.56, y: 121.93))
        
        let path4 = UIBezierPath()
        path4.move(to: CGPoint(x: 3.66, y: 6.44))
        path4.addLine(to: CGPoint.zero)
        path4.addLine(to: CGPoint(x: 0.7, y: 6.21))
        path4.addLine(to: CGPoint(x: 3.66, y: 6.44))
        path4.close()
        let path4Layer = createLayer(path4, color, CGPoint(x: 137.98, y: 121.8))
        
        let path5 = UIBezierPath()
        path5.move(to: CGPoint(x: 3.66, y: 6.44))
        path5.addLine(to: CGPoint.zero)
        path5.addLine(to: CGPoint(x: 0.7, y: 6.21))
        path5.addLine(to: CGPoint(x: 3.66, y: 6.44))
        path5.close()
        let path5Layer = createLayer(path5, Color.shadow.medium, CGPoint(x: 137.98, y: 121.8))
        
        let path6 = UIBezierPath()
        path6.move(to: CGPoint(x: 3.66, y: 6.44))
        path6.addLine(to: CGPoint.zero)
        path6.addLine(to: CGPoint(x: 0.7, y: 6.21))
        path6.addLine(to: CGPoint(x: 3.66, y: 6.44))
        path6.close()
        let path6Layer = createLayer(path6, Color.shadow.bold, CGPoint(x: 137.98, y: 121.8))
        
        let path0 = UIBezierPath()
        let path01 = UIBezierPath()
        if rain {
            path0.move(to: CGPoint(x: 0.01, y: 164.03))
            path0.addCurve(to: CGPoint(x: 23.32, y: 68.27), controlPoint1: CGPoint(x: 0.57, y: 159.01), controlPoint2: CGPoint(x: 16.26, y: 97.03))
            path0.addCurve(to: CGPoint(x: 43.46, y: 16.58), controlPoint1: CGPoint(x: 30.39, y: 39.51), controlPoint2: CGPoint(x: 34.39, y: 25.8))
            path0.addCurve(to: CGPoint(x: 74.16, y: 0.8), controlPoint1: CGPoint(x: 52.53, y: 7.36), controlPoint2: CGPoint(x: 72.51, y: 0.79))
            path0.addCurve(to: CGPoint(x: 95.43, y: 19.51), controlPoint1: CGPoint(x: 75.81, y: 0.82), controlPoint2: CGPoint(x: 77.59, y: 19.51))
            path0.addCurve(to: CGPoint(x: 110.25, y: 0), controlPoint1: CGPoint(x: 113.28, y: 19.51), controlPoint2: CGPoint(x: 109.16, y: -0.01))
            path0.addCurve(to: CGPoint(x: 138.9, y: 13.84), controlPoint1: CGPoint(x: 111.33, y: 0.01), controlPoint2: CGPoint(x: 132.54, y: 2.11))
            path0.addCurve(to: CGPoint(x: 149.65, y: 43.84), controlPoint1: CGPoint(x: 145.26, y: 25.57), controlPoint2: CGPoint(x: 148.75, y: 40.31))
            path0.addCurve(to: CGPoint(x: 152.8, y: 33.86), controlPoint1: CGPoint(x: 150.19, y: 41.16), controlPoint2: CGPoint(x: 151.7, y: 31.73))
            path0.addCurve(to: CGPoint(x: 167.31, y: 35.53), controlPoint1: CGPoint(x: 153.9, y: 36), controlPoint2: CGPoint(x: 163.96, y: 37.62))
            path0.addCurve(to: CGPoint(x: 154.26, y: 88.41), controlPoint1: CGPoint(x: 170.65, y: 33.44), controlPoint2: CGPoint(x: 164.26, y: 87.92))
            path0.addCurve(to: CGPoint(x: 134.15, y: 64.06), controlPoint1: CGPoint(x: 138.45, y: 89.18), controlPoint2: CGPoint(x: 134.15, y: 64.06))
            path0.addCurve(to: CGPoint(x: 130.95, y: 112.95), controlPoint1: CGPoint(x: 134.93, y: 80.14), controlPoint2: CGPoint(x: 128.28, y: 81.51))
            path0.addCurve(to: CGPoint(x: 140.5, y: 185.73), controlPoint1: CGPoint(x: 133.62, y: 144.4), controlPoint2: CGPoint(x: 141.99, y: 171.05))
            path0.addCurve(to: CGPoint(x: 97.24, y: 204.17), controlPoint1: CGPoint(x: 139.01, y: 200.42), controlPoint2: CGPoint(x: 107.91, y: 204.56))
            path0.addCurve(to: CGPoint(x: 97.24, y: 202.8), controlPoint1: CGPoint(x: 97.24, y: 204.17), controlPoint2: CGPoint(x: 97.24, y: 204.09))
            path0.addCurve(to: CGPoint(x: 47.55, y: 185.73), controlPoint1: CGPoint(x: 78.07, y: 202.8), controlPoint2: CGPoint(x: 51.29, y: 197.43))
            path0.addCurve(to: CGPoint(x: 57.26, y: 107.24), controlPoint1: CGPoint(x: 43.81, y: 174.04), controlPoint2: CGPoint(x: 55.88, y: 131.45))
            path0.addCurve(to: CGPoint(x: 51.78, y: 60.39), controlPoint1: CGPoint(x: 58.64, y: 83.03), controlPoint2: CGPoint(x: 51.78, y: 60.39))
            path0.addCurve(to: CGPoint(x: 18.73, y: 171.55), controlPoint1: CGPoint(x: 51.78, y: 60.39), controlPoint2: CGPoint(x: 21.52, y: 167.09))
            path0.addCurve(to: CGPoint(x: 0.01, y: 164.03), controlPoint1: CGPoint(x: 15.95, y: 176.01), controlPoint2: CGPoint(x: -0.54, y: 169.05))
            path0.close()
            
            path01.move(to: CGPoint(x: 0.01, y: 18.09))
            path01.addCurve(to: CGPoint(x: 3.64, y: 3.79), controlPoint1: CGPoint(x: 1.54, y: 12.01), controlPoint2: CGPoint(x: 2.97, y: 6.83))
            path01.addCurve(to: CGPoint(x: 2.68, y: 0), controlPoint1: CGPoint(x: 3.27, y: 2.31), controlPoint2: CGPoint(x: 2.91, y: 0.89))
            path01.addCurve(to: CGPoint(x: 0.01, y: 18.09), controlPoint1: CGPoint(x: 1.89, y: 3.16), controlPoint2: CGPoint(x: -0.16, y: 11.29))
            path01.close()
        } else {
            path0.move(to: CGPoint(x: 0.01, y: 164.03))
            path0.addCurve(to: CGPoint(x: 23.32, y: 68.27), controlPoint1: CGPoint(x: 0.57, y: 159.01), controlPoint2: CGPoint(x: 16.26, y: 97.03))
            path0.addCurve(to: CGPoint(x: 43.46, y: 16.58), controlPoint1: CGPoint(x: 30.39, y: 39.51), controlPoint2: CGPoint(x: 34.39, y: 25.8))
            path0.addCurve(to: CGPoint(x: 74.16, y: 0.8), controlPoint1: CGPoint(x: 52.53, y: 7.36), controlPoint2: CGPoint(x: 72.51, y: 0.79))
            path0.addCurve(to: CGPoint(x: 95.44, y: 19.51), controlPoint1: CGPoint(x: 75.81, y: 0.82), controlPoint2: CGPoint(x: 77.59, y: 19.51))
            path0.addCurve(to: CGPoint(x: 110.25, y: 0), controlPoint1: CGPoint(x: 113.28, y: 19.51), controlPoint2: CGPoint(x: 109.16, y: -0.01))
            path0.addCurve(to: CGPoint(x: 141.14, y: 14.96), controlPoint1: CGPoint(x: 111.34, y: 0.01), controlPoint2: CGPoint(x: 127.13, y: 0.13))
            path0.addCurve(to: CGPoint(x: 184.5, y: 156.63), controlPoint1: CGPoint(x: 155.16, y: 29.79), controlPoint2: CGPoint(x: 184.23, y: 151.27))
            path0.addCurve(to: CGPoint(x: 167.06, y: 161.23), controlPoint1: CGPoint(x: 184.76, y: 161.99), controlPoint2: CGPoint(x: 169.29, y: 165.69))
            path0.addCurve(to: CGPoint(x: 133.76, y: 53.78), controlPoint1: CGPoint(x: 164.83, y: 156.77), controlPoint2: CGPoint(x: 133.76, y: 53.78))
            path0.addCurve(to: CGPoint(x: 130.95, y: 112.95), controlPoint1: CGPoint(x: 138.77, y: 77.95), controlPoint2: CGPoint(x: 128.28, y: 81.51))
            path0.addCurve(to: CGPoint(x: 140.5, y: 185.73), controlPoint1: CGPoint(x: 133.62, y: 144.4), controlPoint2: CGPoint(x: 141.99, y: 171.05))
            path0.addCurve(to: CGPoint(x: 97.24, y: 204.17), controlPoint1: CGPoint(x: 139.01, y: 200.42), controlPoint2: CGPoint(x: 107.91, y: 204.56))
            path0.addCurve(to: CGPoint(x: 97.24, y: 202.8), controlPoint1: CGPoint(x: 97.24, y: 204.17), controlPoint2: CGPoint(x: 97.24, y: 204.09))
            path0.addCurve(to: CGPoint(x: 47.55, y: 185.73), controlPoint1: CGPoint(x: 78.07, y: 202.8), controlPoint2: CGPoint(x: 51.29, y: 197.43))
            path0.addCurve(to: CGPoint(x: 57.26, y: 107.24), controlPoint1: CGPoint(x: 43.81, y: 174.04), controlPoint2: CGPoint(x: 55.88, y: 131.45))
            path0.addCurve(to: CGPoint(x: 51.78, y: 60.39), controlPoint1: CGPoint(x: 58.64, y: 83.03), controlPoint2: CGPoint(x: 51.78, y: 60.39))
            path0.addCurve(to: CGPoint(x: 18.73, y: 171.55), controlPoint1: CGPoint(x: 51.78, y: 60.39), controlPoint2: CGPoint(x: 21.52, y: 167.09))
            path0.addCurve(to: CGPoint(x: 0.01, y: 164.03), controlPoint1: CGPoint(x: 15.95, y: 176.01), controlPoint2: CGPoint(x: -0.54, y: 169.05))
            path0.close()
        }
        let path0Layer = createLayer(path0, color, rain ? CGPoint(x: 36.76, y: 128.5) : CGPoint(x: 36.71, y: 128.56))
        let path01Layer = createLayer(path01, Color.shadow.medium, CGPoint(x: 182.76, y: 168.56))
        
        let path7 = UIBezierPath()
        path7.move(to: CGPoint(x: 4.38, y: 0))
        path7.addLine(to: CGPoint(x: 0, y: 0.04))
        path7.addCurve(to: CGPoint(x: 2.55, y: 75.27), controlPoint1: CGPoint(x: 0, y: 0.04), controlPoint2: CGPoint(x: 2.32, y: 36.76))
        path7.addCurve(to: CGPoint(x: 3.28, y: 184.6), controlPoint1: CGPoint(x: 2.78, y: 113.79), controlPoint2: CGPoint(x: 3.28, y: 184.6))
        path7.addLine(to: CGPoint(x: 7.85, y: 184.64))
        path7.addCurve(to: CGPoint(x: 7.05, y: 75.27), controlPoint1: CGPoint(x: 7.85, y: 184.64), controlPoint2: CGPoint(x: 7.61, y: 118.76))
        path7.addCurve(to: CGPoint(x: 4.38, y: 0), controlPoint1: CGPoint(x: 6.5, y: 31.78), controlPoint2: CGPoint(x: 4.38, y: 0))
        path7.close()
        let path7Layer = createLayer(path7, Color.shadow.medium, CGPoint(x: 130.66, y: 148.14))
        
        let path8 = UIBezierPath()
        path8.move(to: CGPoint(x: 19.45, y: 30.36))
        path8.addCurve(to: CGPoint(x: 25.65, y: 26.46), controlPoint1: CGPoint(x: 23.28, y: 26.99), controlPoint2: CGPoint(x: 24.85, y: 27.12))
        path8.addCurve(to: CGPoint(x: 14.37, y: 18.43), controlPoint1: CGPoint(x: 26.44, y: 25.79), controlPoint2: CGPoint(x: 18.84, y: 22.84))
        path8.addCurve(to: CGPoint(x: 12.14, y: 0), controlPoint1: CGPoint(x: 9.91, y: 14.01), controlPoint2: CGPoint(x: 8.22, y: 8.1))
        path8.addCurve(to: CGPoint(x: 0.06, y: 8.26), controlPoint1: CGPoint(x: 6.81, y: 1.69), controlPoint2: CGPoint(x: 0.16, y: 6.89))
        path8.addCurve(to: CGPoint(x: 13.38, y: 37.03), controlPoint1: CGPoint(x: -0.53, y: 16.03), controlPoint2: CGPoint(x: 3.37, y: 31.71))
        path8.addCurve(to: CGPoint(x: 19.45, y: 30.36), controlPoint1: CGPoint(x: 14.36, y: 37.56), controlPoint2: CGPoint(x: 15.62, y: 33.73))
        path8.close()
        let path8Layer = createLayer(path8, color, CGPoint(x: 107.39, y: 121.93))
        
        let path9 = UIBezierPath()
        path9.move(to: CGPoint(x: 19.45, y: 30.36))
        path9.addCurve(to: CGPoint(x: 25.65, y: 26.46), controlPoint1: CGPoint(x: 23.28, y: 26.99), controlPoint2: CGPoint(x: 24.85, y: 27.12))
        path9.addCurve(to: CGPoint(x: 14.37, y: 18.43), controlPoint1: CGPoint(x: 26.44, y: 25.79), controlPoint2: CGPoint(x: 18.84, y: 22.84))
        path9.addCurve(to: CGPoint(x: 12.14, y: 0), controlPoint1: CGPoint(x: 9.91, y: 14.01), controlPoint2: CGPoint(x: 8.22, y: 8.1))
        path9.addCurve(to: CGPoint(x: 0.06, y: 8.26), controlPoint1: CGPoint(x: 6.81, y: 1.69), controlPoint2: CGPoint(x: 0.16, y: 6.89))
        path9.addCurve(to: CGPoint(x: 13.38, y: 37.03), controlPoint1: CGPoint(x: -0.53, y: 16.03), controlPoint2: CGPoint(x: 3.37, y: 31.71))
        path9.addCurve(to: CGPoint(x: 19.45, y: 30.36), controlPoint1: CGPoint(x: 14.36, y: 37.56), controlPoint2: CGPoint(x: 15.62, y: 33.73))
        path9.close()
        let path9Layer = createLayer(path9, Color.shadow.bold, CGPoint(x: 107.39, y: 121.93))
        
        let path10 = UIBezierPath()
        path10.move(to: CGPoint(x: 7.5, y: 30.7))
        path10.addCurve(to: CGPoint(x: 0.09, y: 26.56), controlPoint1: CGPoint(x: 4.23, y: 28.17), controlPoint2: CGPoint(x: 0.9, y: 27.23))
        path10.addCurve(to: CGPoint(x: 6.43, y: 16.86), controlPoint1: CGPoint(x: -0.71, y: 25.89), controlPoint2: CGPoint(x: 3.91, y: 22.12))
        path10.addCurve(to: CGPoint(x: 5.39, y: 0), controlPoint1: CGPoint(x: 8.95, y: 11.59), controlPoint2: CGPoint(x: 8.39, y: 5.92))
        path10.addCurve(to: CGPoint(x: 17.25, y: 6.46), controlPoint1: CGPoint(x: 9.19, y: 0.79), controlPoint2: CGPoint(x: 16.69, y: 5.55))
        path10.addCurve(to: CGPoint(x: 13.93, y: 35.56), controlPoint1: CGPoint(x: 20.34, y: 11.55), controlPoint2: CGPoint(x: 19.17, y: 30.82))
        path10.addCurve(to: CGPoint(x: 7.5, y: 30.7), controlPoint1: CGPoint(x: 13.11, y: 36.31), controlPoint2: CGPoint(x: 10.76, y: 33.22))
        path10.close()
        let path10Layer = createLayer(path10, color, CGPoint(x: 132.58, y: 121.8))
        
        let path11 = UIBezierPath()
        path11.move(to: CGPoint(x: 7.5, y: 30.7))
        path11.addCurve(to: CGPoint(x: 0.09, y: 26.56), controlPoint1: CGPoint(x: 4.23, y: 28.17), controlPoint2: CGPoint(x: 0.9, y: 27.23))
        path11.addCurve(to: CGPoint(x: 6.43, y: 16.86), controlPoint1: CGPoint(x: -0.71, y: 25.89), controlPoint2: CGPoint(x: 3.91, y: 22.12))
        path11.addCurve(to: CGPoint(x: 5.39, y: 0), controlPoint1: CGPoint(x: 8.95, y: 11.59), controlPoint2: CGPoint(x: 8.39, y: 5.92))
        path11.addCurve(to: CGPoint(x: 17.25, y: 6.46), controlPoint1: CGPoint(x: 9.19, y: 0.79), controlPoint2: CGPoint(x: 16.69, y: 5.55))
        path11.addCurve(to: CGPoint(x: 13.93, y: 35.56), controlPoint1: CGPoint(x: 20.34, y: 11.55), controlPoint2: CGPoint(x: 19.17, y: 30.82))
        path11.addCurve(to: CGPoint(x: 7.5, y: 30.7), controlPoint1: CGPoint(x: 13.11, y: 36.31), controlPoint2: CGPoint(x: 10.76, y: 33.22))
        path11.close()
        let path11Layer = createLayer(path11, Color.shadow.bold, CGPoint(x: 132.58, y: 121.8))
        
        let oval = UIBezierPath()
        oval.move(to: CGPoint(x: 1.47, y: 2.95))
        oval.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval.close()
        let ovalLayer = createLayer(oval, Color.shadow.bold, CGPoint(x: 131.6, y: 151.25))
        
        let oval2 = UIBezierPath()
        oval2.move(to: CGPoint(x: 1.47, y: 2.95))
        oval2.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval2.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval2.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval2.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval2.close()
        let oval2Layer = createLayer(oval2, Color.shadow.bold, CGPoint(x: 132.75, y: 174.45))
        
        let oval3 = UIBezierPath()
        oval3.move(to: CGPoint(x: 1.47, y: 2.95))
        oval3.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval3.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval3.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval3.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval3.close()
        let oval3Layer = createLayer(oval3, Color.shadow.bold, CGPoint(x: 133.56, y: 197.65))
        
        let oval4 = UIBezierPath()
        oval4.move(to: CGPoint(x: 1.47, y: 2.95))
        oval4.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval4.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval4.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval4.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval4.close()
        let oval4Layer = createLayer(oval4, Color.shadow.bold, CGPoint(x: 133.94, y: 220.85))
        
        let oval5 = UIBezierPath()
        oval5.move(to: CGPoint(x: 1.47, y: 2.95))
        oval5.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval5.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval5.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval5.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval5.close()
        let oval5Layer = createLayer(oval5, Color.shadow.bold, CGPoint(x: 134.16, y: 244.06))
        
        let oval6 = UIBezierPath()
        oval6.move(to: CGPoint(x: 1.47, y: 2.95))
        oval6.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval6.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval6.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval6.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval6.close()
        let oval6Layer = createLayer(oval6, Color.shadow.bold, CGPoint(x: 134.46, y: 267.26))
        
        let oval7 = UIBezierPath()
        oval7.move(to: CGPoint(x: 1.47, y: 2.95))
        oval7.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval7.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval7.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval7.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval7.close()
        let oval7Layer = createLayer(oval7, Color.shadow.bold, CGPoint(x: 134.55, y: 290.46))
        
        let oval8 = UIBezierPath()
        oval8.move(to: CGPoint(x: 1.47, y: 2.95))
        oval8.addCurve(to: CGPoint(x: 2.95, y: 1.47), controlPoint1: CGPoint(x: 2.29, y: 2.95), controlPoint2: CGPoint(x: 2.95, y: 2.29))
        oval8.addCurve(to: CGPoint(x: 1.47, y: 0), controlPoint1: CGPoint(x: 2.95, y: 0.66), controlPoint2: CGPoint(x: 2.29, y: 0))
        oval8.addCurve(to: CGPoint(x: 0, y: 1.47), controlPoint1: CGPoint(x: 0.66, y: 0), controlPoint2: CGPoint(x: 0, y: 0.66))
        oval8.addCurve(to: CGPoint(x: 1.47, y: 2.95), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 0.66, y: 2.95))
        oval8.close()
        let oval8Layer = createLayer(oval8, Color.shadow.bold, CGPoint(x: 134.81, y: 313.66))
        
        let top = UIView()
        top.layer.addSublayers(pathLayer, path2Layer, path3Layer, path4Layer, path5Layer, path6Layer, path0Layer, path01Layer, path7Layer, path8Layer, path9Layer, path10Layer, path11Layer, ovalLayer, oval2Layer, oval3Layer, oval4Layer, oval5Layer, oval6Layer, oval7Layer, oval8Layer)
        return top
    }
    
}
